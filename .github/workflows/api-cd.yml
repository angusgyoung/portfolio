# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and deploy api container image

on:
  workflow_dispatch:
  push:
    branches: ['main']
    paths:
      - 'api/**'
      - 'k8s/deployments/api.yml'      

env:
  REGISTRY: ghcr.io/angusgyoung
  IMAGE_NAME: portfolio-api
  K8S_CLUSTER: k8s-1-21-3-do-0-lon1-1634243075945
  DEPLOYMENT_NAME: deployment/portfolio-api
  DEPLOYMENT_FILE: deployments/api.yml

jobs:
   build-and-deploy-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,enable=true,suffix=,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: api
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            version=${{ steps.meta.outputs.tags }}

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      
      - name: Update deployment file
        run: TAG=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }} && sed -i 's|imageTag|'${TAG}'|' $GITHUB_WORKSPACE/k8s/${{ env.DEPLOYMENT_FILE }}
      
      - name: Save kubeconfig
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ env.K8S_CLUSTER }}
      
      - name: Deploy to Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/k8s/${{ env.DEPLOYMENT_FILE }}

      - name: Verify deployment
        run: kubectl -n portfolio rollout status ${{ env.DEPLOYMENT_NAME }}